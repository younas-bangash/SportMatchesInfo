plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
}

android {

    buildFeatures {
        dataBinding true
    }

    compileSdkVersion 30

    defaultConfig {
        applicationId "com.sport.matchesinfo"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    allprojects {
        repositories {
            google()
            jcenter()
        }
    }

    flavorDimensions 'default'

    productFlavors {
        dev {
            // Development Environment
            dimension 'default'
            buildConfigField('String', 'BASE_HOST_URL', '"https://run.mocky.io/v3/"')
        }

        sit {
            // System Integration Test [Software developer and QA engineer]
            dimension 'default'
            buildConfigField('String', 'BASE_HOST_URL', '"https://run.mocky.io/v3/"')
        }

        uat {
            // User Acceptance Test [Client]
            dimension 'default'
            buildConfigField('String', 'BASE_HOST_URL', '"https://run.mocky.io/v3/"')
        }

        prod {
            // Production [Public user]
            dimension 'default'
            buildConfigField('String', 'BASE_HOST_URL', '"https://run.mocky.io/v3/"')
        }
    }


    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    variantFilter { variant ->
        // To check for a certain build type
        if (variant.name == "prodDebug") {
            // Ignore the variant of prodDebug
            setIgnore(true)
        }
    }
    sourceSets {
        main {
            resources {
                srcDirs 'src/main/resources', 'src/androidTest/resources'
            }
        }
    }

    // Increase number of error to be shown on console
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "500"
        }
    }
}

dependencies {
    // dagger
    implementation "com.google.dagger:dagger:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger_version"

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'

    // glide
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    // swipe refresh layout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // Room Database
    implementation "androidx.room:room-runtime:$rootProject.room_datbase_version"
    kapt "androidx.room:room-compiler:$rootProject.room_datbase_version"
    implementation "androidx.room:room-ktx:$rootProject.room_datbase_version"

    // Mokito
    testImplementation "org.mockito:mockito-core:$rootProject.mockito_core_version"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockito_core_version"
    implementation "net.bytebuddy:byte-buddy:1.11.9"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.nav_version"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$rootProject.androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$rootProject.androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.androidXTestRulesVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.room_datbase_version"
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.archTestingVersion"
}